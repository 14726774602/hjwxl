{"version":3,"sources":["webpack:///src/components/front/index.vue","webpack:///./src/components/front/index.vue?66ce","webpack:///./src/components/front/index.vue","webpack:///./src/components/basis/swiper_photo.vue?d17e","webpack:///./src/components/basis/swiper_photo.vue","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js","webpack:///src/components/basis/swiper_photo.vue"],"names":["__webpack_exports__","components","swiper_photo","__WEBPACK_IMPORTED_MODULE_1__components_basis_swiper_photo__","right_nav","__WEBPACK_IMPORTED_MODULE_2__components_basis_right_nav__","m_loading","__WEBPACK_IMPORTED_MODULE_3__components_basis_loading__","data","hideLoading","at_num","sum_num","time","videos","id","img_url","video_url","title","phptoCon","article","col","col_height","col_width","item_height","item_coor","item_btm","max_height","screenWidth","document","body","clientWidth","count","isRouterAlive","props","deta","default","created","this","getPage","getPhoto","mounted","that","window","onresize","quireCoord","methods","axios","method","url","then","res","reload","catch","error","console","log","preload","_this","i","length","push","left","top","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","next","done","img","value","image","Image","src","title_url","onload","err","return","_this2","Math","ceil","paging","a","scrollIntoView","$","hide","show","getArticle","pno","get","params","result","alert","addWindow","width","arr","str","each","height","concat","addCoord","min","apply","sub","indexOf","max","_this3","$nextTick","watch","val","setTimeout","components_front","render","_vm","_h","$createElement","_c","_self","_e","_v","staticClass","attrs","style","minHeight","_l","key","ref","refInFor","to","bg_class","sm_class","alt","_s","_f","issueTime","intro","on","click","$event","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","front","basis_swiper_photo","backgroundImage","doc","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Date","screen","clearTimeout","Dom7","[object Object]","self","selector","context","els","tempParent","html","trim","toCreate","innerHTML","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","parents","k","handleEvent","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","css","prop","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","query","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","use","name","proto","static","install","m","installModule","update","updateSize","swiper","$el","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","floor","slidesPerView","slidesPerColumnFill","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","autoHeight","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","swiper_esm_bundle_transition","transitionStart","direction","dir","swiper_esm_bundle_slide","slideTo","initialSlide","allowSlideNext","allowSlidePrev","t","scrollWidth","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeMode","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","moveDistance","currentSlideSize","stopIndex","groupSize","ratio","navigation","nextEl","prevEl","onScroll","onClick","stopImmediatePropagation","start","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","onReady","complete","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","autoScrollOffset","useOffset","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","isHidden","number","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","visibilityState","onVisibilityChange","beforeCreate","sw","__WEBPACK_IMPORTED_MODULE_0_swiper__","1100","750","fuSwiper","swipEl","mousemove","mouseleave"],"mappings":"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","file":"static/js/1.256016b9a39999baced7.js","sourcesContent":["<template>\r\n  <div>\r\n    <m_loading v-if=\"hideLoading\"></m_loading>\r\n    <div class=\"swiper-photo animated fadeInDown\">\r\n      <!-- <swiper_video  :deta=\"videos\"></swiper_video> -->\r\n      <div class=\"photo-title\">最新相册</div>\r\n      <swiper_photo v-if=\"isRouterAlive\" :deta=\"phptoCon\"></swiper_photo>\r\n    </div>\r\n    <div id=\"sub-content\" class=\"sub-content\">\r\n      <div class=\"sub-text\">\r\n        <div class=\"sub-title\">最新发布文章</div>\r\n        <ul class=\"a-content\" :style=\"{minHeight: max_height+ 'px'}\">\r\n          <li ref=\"item\" class=\"item\" v-for=\"(key,i) in article\" :key=\"i\" :style=\"{left:item_coor[i].left + 'px',top:item_coor[i].top + 'px'}\">\r\n            <div>\r\n              <router-link :to=\"key.bg_class == 1 ? '/life_page?id='+key.id : '/it_page/it'+key.id+'?sm_class='+key.sm_class+'&id='+key.id\">\r\n                <p class=\"a-img\"><img :src=\"key.title_url\" alt=\"\"></p>\r\n                <p class=\"a-title\">{{key.title}}</p>\r\n                <p class=\"a-time\">{{key.issueTime  | dateFormat}}</p>\r\n                <p class=\"a-text\">{{key.intro}}</p>\r\n                <p class=\"a-gauze\"></p>\r\n              </router-link> \r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div class=\"paging\">\r\n          <p class=\"prev\" @click=\"paging(at_num-=1)\">上一页</p>\r\n          <p class=\"present\">第{{at_num}}页</p>\r\n          <p class=\"next\" @click=\"paging(at_num+=1)\">下一页</p>\r\n          <p class=\"sum\">共计{{sum_num}}页</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"person\">\r\n        <div class=\"sub-title\">个人</div>\r\n        <right_nav></right_nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 父组通过  :deta=\"data中的数据\"  的方式将数据传递给子组件\r\n// import swiper_video from \"@/components/basis/swiper_video\"\r\nimport swiper_photo from \"@/components/basis/swiper_photo\"\r\nimport right_nav from \"@/components/basis/right_nav\"\r\nimport m_loading from \"@/components/basis/loading\"\r\n//使用swiper\r\nexport default {\r\n   components: {\r\n    //  swiper_video,\r\n     swiper_photo,\r\n     right_nav,\r\n     m_loading,\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      hideLoading:true,\r\n      at_num:1,\r\n      sum_num:1,\r\n      time : '首页',\r\n      videos:[\r\n        {id:1,img_url:'/static/img/swiper/swp1.png',video_url:'/static/img/swiper/swp1.mp4',title:'聆听你，感悟你，写意你',time:'2019-10-31'},\r\n        {id:2,img_url:'/static/img/swiper/swp1.png',video_url:'/static/img/swiper/swp1.mp4',title:'聆听你，感悟你，写意你',time:'2019-10-31'},\r\n        {id:3,img_url:'/static/img/swiper/swp1.png',video_url:'/static/img/swiper/swp1.mp4',title:'聆听你，感悟你，写意你',time:'2019-10-31'},\r\n        {id:4,img_url:'/static/img/swiper/swp1.png',video_url:'/static/img/swiper/swp1.mp4',title:'聆听你，感悟你，写意你',time:'2019-10-31'},\r\n        {id:5,img_url:'/static/img/swiper/swp1.png',video_url:'/static/img/swiper/swp1.mp4',title:'聆听你，感悟你，写意你',time:'2019-10-31'}\r\n      ],\r\n      phptoCon:'',\r\n      //接受文章数据\r\n      article:[],\r\n      col:2,  //列数\r\n      col_height:[], //保存每列高度的数组\r\n      col_width:'', //保存item宽度\r\n      item_height:[],//保存每个item的高度 \r\n      item_coor:[],  //保存每个item坐标\r\n      item_btm:10,  //设置下边距\r\n      max_height:'', //最高高度\r\n      screenWidth: document.body.clientWidth, //当前屏幕尺寸\r\n      count: 0,\r\n      isRouterAlive:false\r\n     \r\n    };\r\n  },\r\n  props: {\r\n    //接收父组件传递过来的参数方法\r\n    deta: {\r\n      default: function() {\r\n        return '';\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    //实例创建完成后调用,此阶段完成了数据的观测,可调用data数据\r\n    //执行请求\r\n    //this.getArticle();\r\n    this.getPage();\r\n    this.getPhoto()\r\n  },\r\n  mounted() {\r\n    //页面初始化方法\r\n    const that = this;\r\n    //窗口发生改变时执行的函数\r\n    window.onresize = () => {\r\n      return (() => {\r\n        window.screenWidth = document.body.clientWidth\r\n        that.screenWidth = window.screenWidth\r\n        that.quireCoord();\r\n    })()}\r\n  },\r\n  methods: {\r\n    //定义方法的地方\r\n    //监听方法click事件等，执行drawFeatures方法\r\n    //获取相册前10\r\n    getPhoto:function(){\r\n      //总页数查询\r\n      let that = this;\r\n      this.axios({\r\n        method: 'get',\r\n        url:'http://localhost:3306/photo/listSw',\r\n        data:''\r\n      }).then((res)=>{\r\n        that.phptoCon = res.data \r\n        that.reload ()\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    //图片预加载的方法\r\n    preload: function() {\r\n      //初始化坐标\r\n      this.item_coor = []\r\n      for (let i = 0;i < this.article.length;i++){\r\n        this.item_coor.push({left:'0',top:'0'}) \r\n      } \r\n      //初始化图片预加载\r\n      this.count = 0;\r\n      for (let img of this.article) {\r\n        let image = new Image()\r\n        image.src = img.title_url\r\n        image.onload = () => {\r\n          this.count++\r\n        }\r\n      }\r\n    },\r\n    //页数查询\r\n    getPage:function(){\r\n      //总页数查询\r\n      this.axios({\r\n        method: 'get',\r\n        url:'http://localhost:3306/article/list_pno',\r\n        data:''\r\n      }).then((res)=>{\r\n        if(res.data.length>0){\r\n          this.sum_num = Math.ceil(res.data[0]['COUNT(*)']/10)\r\n          this.paging();\r\n        }\r\n      })\r\n    },\r\n    //分页\r\n    paging:function(a){\r\n      //回到顶部\r\n      document.body.scrollIntoView();\r\n      this.hideLoading = true;\r\n      //开始分页\r\n      if(this.at_num == 1){\r\n        $('.prev').hide()\r\n        if(this.sum_num>this.at_num){\r\n          $('.present').show()\r\n          $('.next').show()\r\n          $('.sum').show()\r\n        }else{\r\n          $('.present').hide()\r\n          $('.next').hide()\r\n          $('.sum').hide()\r\n        }\r\n      }else{\r\n        $('.prev').show()\r\n        $('.sum').show()\r\n        if(this.sum_num>this.at_num){\r\n          $('.next').show()\r\n        }else{\r\n          $('.next').hide()\r\n        }\r\n      }\r\n      this.getArticle();\r\n    },\r\n    //获取文章数据\r\n    getArticle:function(){\r\n      let url = 'http://localhost:3306/article/list'\r\n      //获取当前页数\r\n      let pno = this.at_num\r\n      let that = this\r\n      this.axios.get(url, {\r\n          params: {\r\n            pno: pno\r\n          }\r\n        })\r\n        .then(function (result) {\r\n          if(result.data.length>0){\r\n            that.article = result.data\r\n            that.preload()\r\n          } else{\r\n            alert('获取数据失败')\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    //开始瀑布流\r\n    quireCoord:function(){\r\n      this.addWindow();\r\n      this.col_width = $(\".item\").width();//获取item宽度\r\n      let arr = [];\r\n      let str = []\r\n      $(\".item\").each(function(){\r\n        arr.push(Math.ceil($(this).height()));\r\n        str.push({left:'0',top:'0'})  //初始化item坐标\r\n      });\r\n      this.item_height = [].concat(arr);//获取每个item的高度\r\n      for(let i = 0;i<this.col;i++){\r\n        this.col_height[i] = 0; //初始化每列的高度\r\n      }\r\n      this.addCoord()\r\n    },\r\n    addCoord:function(){\r\n      for(let a = 0; a<this.article.length; a++){\r\n        var min = Math.min.apply(Math,this.col_height); //获取列中最小高度\r\n        var sub = this.col_height.indexOf(min)  //获取列下标\r\n        this.item_coor[a].left = this.col_width*sub  //将当前item对应的left坐标保存到数组中\r\n        this.item_coor[a].top = this.col_height[sub];  //将当前item对应的top坐标保存到数组中\r\n        this.col_height[sub] += this.item_height[a];   //改变当前列的高度  加上当前item的高度\r\n        this.col_height[sub] += this.item_btm; //改变当前列的高度  加上下边距\r\n        var max = Math.max.apply(Math,this.col_height); \r\n        this.max_height = max;\r\n      }\r\n    },\r\n    //获取页面窗口大小\r\n    addWindow:function(){\r\n      if(this.screenWidth < 750){\r\n          this.col = 1;\r\n      }else{\r\n        this.col = 2;\r\n      }\r\n    },\r\n    //参数发生改变时重新执行加载组件的函数\r\n    reload () {\r\n      this.isRouterAlive = false\r\n      this.$nextTick(() => (this.isRouterAlive = true))\r\n    }\r\n  },\r\n  watch: {\r\n    //监听预加载\r\n    count: function(val) {\r\n      if(val  == this.article.length && val != 0){\r\n        let that = this\r\n        let timeId = setTimeout(function(){\r\n          that.hideLoading = false;\r\n        },300)\r\n        this.quireCoord();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .swiper-photo{\r\n    padding: 10px;\r\n    background: rgba(250, 250, 250, .5);\r\n  }\r\n  .photo-title{\r\n    font-size: 1.2rem;\r\n    line-height: 3;\r\n    font-weight: bold;\r\n    color: #000;\r\n    letter-spacing: 1px;\r\n  }\r\n  .sub-content{\r\n    margin-top: 10px;\r\n    padding: 0 10px;\r\n    display: flex;\r\n    align-items: flex-start;\r\n    justify-content: space-between;\r\n    background: rgba(238, 238, 238, .5);\r\n  }\r\n\r\n  .sub-title{\r\n    font-size: 1.2rem;\r\n    line-height: 3;\r\n    font-weight: bold;\r\n    color: #000;\r\n    letter-spacing: 1px;\r\n  }\r\n  .sub-text{\r\n    width: 68%;\r\n  }\r\n  .person{\r\n    width: 30%;\r\n  }\r\n\r\n  .a-content{\r\n    margin-top: -.5rem;\r\n    width: 100%;\r\n    position: relative;\r\n  }\r\n\r\n  .item{\r\n      z-index: 10;\r\n      transition: 0.8s;\r\n      width: 50%;\r\n      position: absolute;\r\n  }\r\n  .item div{\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: .5rem ;\r\n  }\r\n \r\n  .item div a{\r\n    display: block;\r\n    background: #fafafa;\r\n    padding: .5rem;\r\n    border-radius: 3px;\r\n    position: relative;\r\n  }\r\n  .a-img{\r\n    overflow: hidden;\r\n  }\r\n  .a-img img{\r\n    width: 100%;\r\n    display: block;\r\n    transition: all .5s;\r\n  }\r\n  \r\n  .a-title{\r\n    font-size: 1rem;\r\n    line-height: 2;\r\n    color: #333;    \r\n    font-weight: bold;\r\n    letter-spacing: 1px;\r\n    transition: all .3s;\r\n  }\r\n  .a-time{\r\n    font-size: .8rem;\r\n    line-height: 1.5;\r\n    color: #f00;    \r\n    padding: 0 1rem;\r\n    letter-spacing: 1px;\r\n  }\r\n  .a-text{\r\n    padding: 0 1rem;\r\n    color: #666;\r\n    line-height: 1.5;\r\n    font-size: .8rem;\r\n    letter-spacing: 1px;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 3;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    transition: all .3s;\r\n  }\r\n  .a-gauze{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    -webkit-box-shadow: rgba(0,0,0,0.5) 0px .3rem .3rem;\r\n    -moz-box-shadow: rgb(0,0,0,0.5) 0px .3rem .3rem;\r\n    box-shadow: rgba(0,0,0,0.5) 0px .3rem .3rem;\r\n    opacity: 0;\r\n    transition: all .5s;\r\n    z-index: -1;\r\n  }\r\n  .item div:hover a .a-gauze{\r\n    opacity: 1;\r\n  }\r\n  .item div:hover a .a-title{\r\n    color: #f00;\r\n  }\r\n  .item div:hover a .a-text{\r\n    color: #000;\r\n  }\r\n  .item div:hover a .a-img img{\r\n    transform: scale(1.1);\r\n  } \r\n\r\n  /* 分页 */\r\n  .paging{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 0 30px 10px;\r\n    letter-spacing: 1px;\r\n    font-size: .9rem;\r\n    color: #333;\r\n  }\r\n  .paging p{\r\n    margin-left: 10px;\r\n  }\r\n  .prev,.next{\r\n    color: #000;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n  }\r\n  @media (max-width: 1200px) {\r\n    .person{\r\n      display: none;\r\n    }\r\n    .sub-text{\r\n      width: 100%;\r\n    }\r\n  }\r\n  @media (max-width: 750px) {\r\n  .sub-content{\r\n    padding: 10px 0;\r\n  }\r\n  .swiper-video{\r\n    padding: 10px 10px;\r\n    background: #fafafa;\r\n    animation: bounceInDown .5s;\r\n  }\r\n  .item{\r\n    width: 100%;\r\n  }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/front/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.hideLoading)?_c('m_loading'):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"swiper-photo animated fadeInDown\"},[_c('div',{staticClass:\"photo-title\"},[_vm._v(\"最新相册\")]),_vm._v(\" \"),(_vm.isRouterAlive)?_c('swiper_photo',{attrs:{\"deta\":_vm.phptoCon}}):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"sub-content\",attrs:{\"id\":\"sub-content\"}},[_c('div',{staticClass:\"sub-text\"},[_c('div',{staticClass:\"sub-title\"},[_vm._v(\"最新发布文章\")]),_vm._v(\" \"),_c('ul',{staticClass:\"a-content\",style:({minHeight: _vm.max_height+ 'px'})},_vm._l((_vm.article),function(key,i){return _c('li',{key:i,ref:\"item\",refInFor:true,staticClass:\"item\",style:({left:_vm.item_coor[i].left + 'px',top:_vm.item_coor[i].top + 'px'})},[_c('div',[_c('router-link',{attrs:{\"to\":key.bg_class == 1 ? '/life_page?id='+key.id : '/it_page/it'+key.id+'?sm_class='+key.sm_class+'&id='+key.id}},[_c('p',{staticClass:\"a-img\"},[_c('img',{attrs:{\"src\":key.title_url,\"alt\":\"\"}})]),_vm._v(\" \"),_c('p',{staticClass:\"a-title\"},[_vm._v(_vm._s(key.title))]),_vm._v(\" \"),_c('p',{staticClass:\"a-time\"},[_vm._v(_vm._s(_vm._f(\"dateFormat\")(key.issueTime)))]),_vm._v(\" \"),_c('p',{staticClass:\"a-text\"},[_vm._v(_vm._s(key.intro))]),_vm._v(\" \"),_c('p',{staticClass:\"a-gauze\"})])],1)])}),0),_vm._v(\" \"),_c('div',{staticClass:\"paging\"},[_c('p',{staticClass:\"prev\",on:{\"click\":function($event){return _vm.paging(_vm.at_num-=1)}}},[_vm._v(\"上一页\")]),_vm._v(\" \"),_c('p',{staticClass:\"present\"},[_vm._v(\"第\"+_vm._s(_vm.at_num)+\"页\")]),_vm._v(\" \"),_c('p',{staticClass:\"next\",on:{\"click\":function($event){return _vm.paging(_vm.at_num+=1)}}},[_vm._v(\"下一页\")]),_vm._v(\" \"),_c('p',{staticClass:\"sum\"},[_vm._v(\"共计\"+_vm._s(_vm.sum_num)+\"页\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"person\"},[_c('div',{staticClass:\"sub-title\"},[_vm._v(\"个人\")]),_vm._v(\" \"),_c('right_nav')],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2280a356\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/front/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2280a356\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2280a356\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2280a356\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/front/index.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.deta),function(key,i){return _c('div',{key:i,staticClass:\"swiper-slide\"},[_c('router-link',{attrs:{\"to\":'/photo_page?id='+key.id}},[_c('div',[_c('img',{attrs:{\"src\":\"/static/img/bg.png\",\"alt\":\"\"}}),_vm._v(\" \"),_c('p',{style:({backgroundImage: 'url(' + key.img_url + ')'})})]),_vm._v(\" \"),_c('p',{staticClass:\"sw-title\"},[_vm._v(_vm._s(key.title))]),_vm._v(\" \"),_c('p',{staticClass:\"sw-time\"},[_vm._v(_vm._s(_vm._f(\"dateFormat\")(key.issueTime)))])])],1)}),0)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6fb26dc0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/basis/swiper_photo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6fb26dc0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./swiper_photo.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./swiper_photo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./swiper_photo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6fb26dc0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./swiper_photo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6fb26dc0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/basis/swiper_photo.vue\n// module id = null\n// module chunks = ","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 5.3.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 24, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each((index, slide) => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    let t = -translate;\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl, rtlTranslate } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = ((wrapperEl.scrollWidth - wrapperEl.offsetWidth) - wrapperEl.scrollLeft);\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = ((parseFloat(params.stretch) / 100) * slideSize);\n      }\n      let translateY = isHorizontal ? 0 : stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        const nextThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"swiper-container\">\r\n        <div class=\"swiper-wrapper\">\r\n            <div class=\"swiper-slide\" v-for=\"(key,i) in deta\" :key=\"i\">\r\n                <router-link :to=\"'/photo_page?id='+key.id\">\r\n                    <div>\r\n                        <img src=\"/static/img/bg.png\" alt />\r\n                        <p :style=\"{backgroundImage: 'url(' + key.img_url + ')'}\"></p>\r\n                    </div>\r\n                    <p class=\"sw-title\">{{key.title}}</p>\r\n                    <p class=\"sw-time\">{{key.issueTime | dateFormat}}</p>\r\n                </router-link>\r\n            </div>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 父组通过  :deta=\"data中的数据\"  的方式将数据传递给子组件\r\n//import myHead from \"./head.vue\"\r\nimport Swiper from \"swiper\";\r\nexport default {\r\n   components: {\r\n  },\r\n  data() {\r\n    return {\r\n        name : '相册轮播',\r\n        \r\n       \r\n    };\r\n  },\r\n  props: {\r\n    //接收父组件传递过来的参数方法\r\n    deta: {\r\n      default: function() {\r\n        return '';\r\n      }\r\n    }\r\n  },\r\n  beforeCreate(){\r\n    //实例未创建，调用不到data数据\r\n  },\r\n  created() {\r\n    //实例创建完成后调用,此阶段完成了数据的观测,可调用data数据\r\n  },\r\n  mounted() {\r\n    //页面初始化方法\r\n    let  sw = new Swiper(\".swiper-container\", {\r\n            // 设置激活的slide居中\r\n            centeredSlides: false,\r\n            //同时显示的slides数量\r\n            slidesPerView: 1,\r\n            //定义slides的数量多少为一组。\r\n            slidesPerGroup: 1,\r\n            //设置sides之间的距离，单位px\r\n            spaceBetween: 10,\r\n            breakpoints: {  //5.0版本 大于等于该宽度时的参数\r\n                1100: {\r\n                    slidesPerView: 3,\r\n                },\r\n                750: {\r\n                    slidesPerView: 2,\r\n                }\r\n            },\r\n            // 无限循环\r\n            loop: true,\r\n            //滑动模式\r\n            freeMode: false,\r\n            //自动播放\r\n            autoplay: true,\r\n        })\r\n    this.fuSwiper(\".swiper-container\", sw);\r\n  },\r\n  methods: {\r\n    //定义方法的地方\r\n    fuSwiper: function(el, swipEl) {\r\n      $(el)\r\n        .mousemove(function() {\r\n          swipEl.autoplay.stop();\r\n        })\r\n        .mouseleave(function() {\r\n          swipEl.autoplay.start();\r\n        });\r\n    },\r\n   \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.swiper-slide a{\r\n    display: block;\r\n    padding: .5rem;\r\n    background: #fff;  \r\n    border-radius: 3px;\r\n}\r\n.swiper-slide a div{\r\n    position: relative;\r\n}\r\n.swiper-slide a div img{\r\n    display: block;\r\n    width: 100%;\r\n}\r\n.swiper-slide a div p{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover; \r\n}\r\n.sw-title{\r\n    font-size: 1rem;\r\n    color: #333;\r\n    text-align: center;\r\n    margin-top: 5px;\r\n    transition: all .3s;\r\n    font-weight: bold;\r\n}\r\n.sw-time{\r\n    text-align: center;\r\n    font-size: .8rem;\r\n    color: #f00;\r\n    margin-top: 5px;\r\n}\r\n.swiper-slide a:hover .sw-title{\r\n    color: #f00;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/basis/swiper_photo.vue"],"sourceRoot":""}