{"version":3,"sources":["webpack:///src/components/basis/page_swiper.vue","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js","webpack:///./src/components/basis/page_swiper.vue?5a3b","webpack:///./src/components/basis/page_swiper.vue","webpack:///src/components/front/life_page.vue","webpack:///./src/components/front/life_page.vue?8f87","webpack:///./src/components/front/life_page.vue"],"names":["__webpack_exports__","components","data","a_video","bool","props","deta","default","beforeCreate","created","methods","fuSwiper","el","swipEl","$","mousemove","autoplay","stop","mouseleave","start","show_video","url","this","hide_video","mounted","sw","__WEBPACK_IMPORTED_MODULE_0_swiper__","centeredSlides","slidesPerView","slidesPerGroup","spaceBetween","breakpoints","1000","loop","freeMode","navigation","prevEl","nextEl","lazy","loadPrevNext","elementClass","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","fn","prototype","Class","Methods","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","key","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","matchedItems","removeChild","toAdd","Object","keys","forEach","methodName","Utils","obj","object","nextTick","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","isObject","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","use","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","abs","slidesPerGroupSkip","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","visibleSlides","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","slideProgress","minTranslate","autoHeight","slideBefore","slideAfter","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","skip","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","swiper_esm_bundle_translate","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","newProgress","x","y","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","swiper_esm_bundle_transition","transitionStart","direction","dir","swiper_esm_bundle_slide","slideTo","initialSlide","allowSlideNext","allowSlidePrev","t","scrollWidth","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","increment","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onResize","setBreakpoint","running","paused","run","dummyEventAttached","dummyEventListener","defaults","init","touchEventsTarget","updateOnWindowResize","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","prototypes","attachEvents","touchEvents","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","once","moveDistance","currentSlideSize","stopIndex","groupSize","ratio","onScroll","onClick","stopImmediatePropagation","move","end","passive","cancel","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","directionChanged","needsReLoop","changeDirection","points","point","minRatio","substr","innerHeight","sort","b","innerWidth","wasLocked","lastSlidePosition","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isEdge","isSafari","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","eventsTarged","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","raw","animateSlider","releaseScroll","getTime","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","slideSelector","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","autoScrollOffset","useOffset","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","hideOnClick","isHidden","number","render","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","disableOnInteraction","pause","visibilityState","onVisibilityChange","basis_page_swiper","_h","$createElement","_c","_self","staticClass","_l","alt","_v","viewBox","version","xmlns","p-id","d","fill","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","components_basis_page_swiper","normalizeComponent","page_swiper","life_page","m_loading","loading","comment","isRouterAlive","article","img_con","count","hideLoading","firstArticle","lastArticle","prevCon","id","title","nextCon","getArticle","setCookie","cname","cvalue","exdays","setTime","expires","toUTCString","cookie","getLike","nlike","$route","ifLike","$cookie","that","axios","then","result","alike","addLike","alert","catch","error","console","log","postData","qs","stringify","res","code","msg","preload","_this","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","img","err","return","sepImg","img_url","setFirst","str","reload","bg_class","setlast","getPrevNext","_this2","$nextTick","watch","front_life_page","_vm","_e","_s","_f","issueTime","domProps","content","$event","staticStyle","stroke","stroke-miterlimit","life_page_Component","life_page_normalizeComponent"],"mappings":"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","file":"static/js/2.a72dd3acd02ac2ffd4b6.js","sourcesContent":["<template>\r\n  <div class=\"sw\">\r\n    <div class=\"swiper-container\">\r\n      <div class=\"swiper-wrapper\">\r\n        <div class=\"swiper-slide\" v-for=\"(key,i) in deta\" :key=\"i\">\r\n          <p>\r\n              <img :src=\"key\" alt />\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 如果需要导航按钮 -->\r\n    <div class=\"prev\">\r\n      <svg t=\"1588332802248\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1153\"><path d=\"M512 0C229.221434 0 0 229.221434 0 512S229.221434 1024 512 1024 1024 794.778566 1024 512 794.778566 0 512 0zM512 985.358491C250.570868 985.358491 38.641509 773.429132 38.641509 512 38.641509 250.570868 250.570868 38.641509 512 38.641509 773.429132 38.641509 985.358491 250.570868 985.358491 512 985.358491 773.429132 773.429132 985.358491 512 985.358491zM408.788528 516.946113 605.976151 319.758491c3.767547-3.767547 3.767547-9.892226 0-13.659774l-13.659774-13.659774c-3.767547-3.767547-9.892226-3.767547-13.659774 0L360.061585 511.033962c-3.767547 3.767547-3.767547 9.892226 0 13.659774l13.659774 13.659774c1.333132 1.333132 2.994717 2.028679 4.714264 2.415094l209.011925 208.992604c3.728906 3.748226 9.795623 3.748226 13.543849 0l13.543849-13.543849c3.728906-3.728906 3.728906-9.795623 0-13.543849L408.788528 516.946113z\" p-id=\"1154\" fill=\"#dbdbdb\"></path></svg>\r\n    </div>\r\n    <div class=\"next\">\r\n      <svg t=\"1588332959292\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"1943\"><path d=\"M445.343396 292.438943c-3.767547-3.767547-9.892226-3.767547-13.659774 0l-13.659774 13.659774c-3.767547 3.767547-3.767547 9.892226 0 13.659774l197.187623 197.187623L409.484075 722.69283c-3.728906 3.748226-3.728906 9.795623 0 13.543849l13.543849 13.543849c3.728906 3.748226 9.795623 3.748226 13.543849 0l209.011925-208.992604c1.719547-0.386415 3.381132-1.081962 4.714264-2.415094l13.659774-13.659774c3.767547-3.767547 3.767547-9.892226 0-13.659774L445.343396 292.438943zM512 0C229.240755 0 0 229.221434 0 512 0 794.759245 229.240755 1024 512 1024 794.778566 1024 1024 794.759245 1024 512 1024 229.221434 794.778566 0 512 0zM512 985.358491C250.570868 985.358491 38.641509 773.429132 38.641509 512 38.641509 250.570868 250.570868 38.641509 512 38.641509 773.429132 38.641509 985.358491 250.570868 985.358491 512 985.358491 773.429132 773.429132 985.358491 512 985.358491z\" p-id=\"1944\" fill=\"#dbdbdb\"></path></svg>\r\n    </div>\r\n  </div>\r\n  \r\n</template>\r\n\r\n<script>\r\nimport Swiper from \"swiper\";\r\nexport default {\r\n   components: {\r\n  },\r\n  data() {\r\n    return {\r\n      a_video:'static/img/swiper/swp1.mp4',\r\n      bool:false\r\n    };\r\n  },\r\n  props: {\r\n    //接收父组件传递过来的参数方法\r\n    deta: {\r\n      default: function() {\r\n        return '';\r\n      }\r\n    }\r\n  },\r\n  beforeCreate(){\r\n    //实例未创建，调用不到data数据\r\n  },\r\n  created() {\r\n    //实例创建完成后调用,此阶段完成了数据的观测,可调用data数据\r\n  },\r\n  methods: {\r\n    //定义方法的地方\r\n    //监听方法click事件等，执行drawFeatures方法\r\n    fuSwiper: function(el, swipEl) {\r\n      $(el)\r\n        .mousemove(function() {\r\n          swipEl.autoplay.stop();\r\n        })\r\n        .mouseleave(function() {\r\n          swipEl.autoplay.start();\r\n        });\r\n    },\r\n\r\n    show_video: function(url){\r\n      //console.log(url)\r\n      this.bool = true;\r\n      this.a_video = url;\r\n      //console.log(this.a_video)\r\n    },\r\n\r\n    hide_video: function(){\r\n      this.bool = false;\r\n    }\r\n  },\r\n  \r\n  mounted() {\r\n    //页面初始化方法\r\n    let sw = new Swiper(\".swiper-container\", {\r\n       // 设置激活的slide居中\r\n      centeredSlides: false,\r\n      //同时显示的slides数量\r\n      slidesPerView: 1,\r\n      //定义slides的数量多少为一组。\r\n      slidesPerGroup: 1,\r\n      //设置sides之间的距离，单位px\r\n      spaceBetween: 10,\r\n      breakpoints: {  //5.0版本 大于等于该宽度时的参数\r\n        1000: {\r\n            slidesPerView: 2,\r\n        }\r\n      },\r\n      // 无限循环\r\n      loop: true,\r\n      //滑动模式\r\n      freeMode: false,\r\n      //自动播放\r\n      autoplay: true,\r\n      // 如果需要分页器\r\n      // pagination: {\r\n      //     el: '.swiper-pagination',\r\n      //     clickable: true,\r\n      // },\r\n      // 如果需要前进后退按钮\r\n      navigation: {\r\n        prevEl: \".prev\",\r\n        nextEl: \".next\"\r\n      },\r\n      // 懒加载\r\n      lazy: {\r\n        loadPrevNext: true,\r\n        elementClass: \"sw-lazy\"\r\n      }\r\n    });\r\n    this.fuSwiper(\".swiper-container\", sw);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  .sw{\r\n    position: relative;\r\n    padding: 0 70px;\r\n  }\r\n  .sw:hover .prev,.sw:hover .next{\r\n    opacity: 1;\r\n  }\r\n  .prev,.next{\r\n    width: 50px;\r\n    height: 50px;\r\n    position: absolute;\r\n    top: 50%;\r\n    margin-top: -15px;\r\n    outline: none;\r\n    opacity: 0;\r\n    transition: all .6s;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .prev{\r\n    left: 0;\r\n  }\r\n  .next{\r\n    right: 0;\r\n  }\r\n  .swiper-container{\r\n    width: 100%;\r\n  }\r\n  .swiper-wrapper{\r\n    align-items: center;\r\n  }\r\n  .swiper-slide{\r\n    padding: .5rem;\r\n    border-radius: 3px;\r\n    position: relative;\r\n  }\r\n  .swiper-slide p{\r\n    -webkit-box-shadow: rgba(200,200,200,0) 0px 5px 5px;\r\n    -moz-box-shadow: rgb(200,200,200,0) 0px 5px 5px;\r\n    box-shadow: rgba(200,200,200,0) 0px 5px 5px;\r\n    overflow: hidden;\r\n    border-radius: 5px;\r\n    transition: all 0.6s;\r\n    height: 300px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n  }\r\n  .swiper-slide img{\r\n    display: block;\r\n    transition: all 0.6s;\r\n    max-width: 100%;\r\n    max-height: 300px;\r\n    border-radius: 5px;\r\n  }\r\n  .swiper-slide:hover p{\r\n    -webkit-box-shadow: rgba(200,200,200,.8) 0px 5px 5px;\r\n    -moz-box-shadow: rgb(200,200,200,.8) 0px 5px 5px;\r\n    box-shadow: rgba(200,200,200,.8) 0px 5px 5px;\r\n  }\r\n  .swiper-slide:hover img{\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  @media(max-width:750px){\r\n    .sw{\r\n      padding: 0;\r\n    }\r\n    .prev,.next{\r\n      display: none;\r\n    }\r\n    .swiper-slide p{\r\n      height: 250px;\r\n    }\r\n    .swiper-slide img{\r\n      max-height: 250px;\r\n    }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/basis/page_swiper.vue","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = null\n// module chunks = ","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = null\n// module chunks = ","/**\n * Swiper 5.3.8\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2020 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 24, 2020\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      swiper.visibleSlides.each((index, slide) => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length) break;\n        activeSlides.push(swiper.slides.eq(index)[0]);\n      }\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    let t = -translate;\n    if (rtl) {\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\n    }\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: t,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl, rtlTranslate } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    if (rtlTranslate) {\n      swiper.translate = ((wrapperEl.scrollWidth - wrapperEl.offsetWidth) - wrapperEl.scrollLeft);\n    } else {\n      swiper.translate = -wrapperEl.scrollLeft;\n    }\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n\n  const points = Object.keys(breakpoints).map((point) => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = window.innerHeight * minRatio;\n      return { value, point };\n    }\n    return { value: point, point };\n  });\n\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const { point, value } = points[i];\n    if (value <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video, label',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    const slideSelector = `.${swiper.params.slideClass}`;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = ((parseFloat(params.stretch) / 100) * slideSize);\n      }\n      let translateY = isHorizontal ? 0 : stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        const nextThumbsIndex = thumbsSwiper.slides\n          .eq(currentThumbsIndex)\n          .nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0)\n          .index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/js/swiper.esm.bundle.js\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sw\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.deta),function(key,i){return _c('div',{key:i,staticClass:\"swiper-slide\"},[_c('p',[_c('img',{attrs:{\"src\":key,\"alt\":\"\"}})])])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"prev\"},[_c('svg',{staticClass:\"icon\",attrs:{\"t\":\"1588332802248\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"1153\"}},[_c('path',{attrs:{\"d\":\"M512 0C229.221434 0 0 229.221434 0 512S229.221434 1024 512 1024 1024 794.778566 1024 512 794.778566 0 512 0zM512 985.358491C250.570868 985.358491 38.641509 773.429132 38.641509 512 38.641509 250.570868 250.570868 38.641509 512 38.641509 773.429132 38.641509 985.358491 250.570868 985.358491 512 985.358491 773.429132 773.429132 985.358491 512 985.358491zM408.788528 516.946113 605.976151 319.758491c3.767547-3.767547 3.767547-9.892226 0-13.659774l-13.659774-13.659774c-3.767547-3.767547-9.892226-3.767547-13.659774 0L360.061585 511.033962c-3.767547 3.767547-3.767547 9.892226 0 13.659774l13.659774 13.659774c1.333132 1.333132 2.994717 2.028679 4.714264 2.415094l209.011925 208.992604c3.728906 3.748226 9.795623 3.748226 13.543849 0l13.543849-13.543849c3.728906-3.728906 3.728906-9.795623 0-13.543849L408.788528 516.946113z\",\"p-id\":\"1154\",\"fill\":\"#dbdbdb\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"next\"},[_c('svg',{staticClass:\"icon\",attrs:{\"t\":\"1588332959292\",\"viewBox\":\"0 0 1024 1024\",\"version\":\"1.1\",\"xmlns\":\"http://www.w3.org/2000/svg\",\"p-id\":\"1943\"}},[_c('path',{attrs:{\"d\":\"M445.343396 292.438943c-3.767547-3.767547-9.892226-3.767547-13.659774 0l-13.659774 13.659774c-3.767547 3.767547-3.767547 9.892226 0 13.659774l197.187623 197.187623L409.484075 722.69283c-3.728906 3.748226-3.728906 9.795623 0 13.543849l13.543849 13.543849c3.728906 3.748226 9.795623 3.748226 13.543849 0l209.011925-208.992604c1.719547-0.386415 3.381132-1.081962 4.714264-2.415094l13.659774-13.659774c3.767547-3.767547 3.767547-9.892226 0-13.659774L445.343396 292.438943zM512 0C229.240755 0 0 229.221434 0 512 0 794.759245 229.240755 1024 512 1024 794.778566 1024 1024 794.759245 1024 512 1024 229.221434 794.778566 0 512 0zM512 985.358491C250.570868 985.358491 38.641509 773.429132 38.641509 512 38.641509 250.570868 250.570868 38.641509 512 38.641509 773.429132 38.641509 985.358491 250.570868 985.358491 512 985.358491 773.429132 773.429132 985.358491 512 985.358491z\",\"p-id\":\"1944\",\"fill\":\"#dbdbdb\"}})])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-c13357fa\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/basis/page_swiper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c13357fa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./page_swiper.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./page_swiper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./page_swiper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c13357fa\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./page_swiper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c13357fa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/basis/page_swiper.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <m_loading v-if=\"hideLoading\"></m_loading>\r\n    <div class=\"page-swiper animated fadeInDown\" v-if=\"img_con.length >= 2\">\r\n      <page_swiper v-if=\"isRouterAlive\" :deta=\"img_con\"></page_swiper>\r\n    </div>\r\n    <div class=\"page-img img-2 animated fadeInDown\" v-if=\"img_con.length == 1\">\r\n      <p>\r\n        <img :src=\"img_con[0]\" alt=\"\">\r\n      </p>\r\n    </div>\r\n    <div class=\"page-container animated fadeInUp\">\r\n      <div class=\"page-content\">\r\n        <div class=\"p-title\">{{article.title}}</div>\r\n        <div class=\"p-time\">发布时间 <span>{{article.issueTime | dateFormat}}</span></div> \r\n        <div class=\"p-text\" v-html=\"article.content\"></div> \r\n        <div class=\"p-like\">\r\n          <span @click=\"getLike()\">❤（{{article.alike}}）</span>\r\n        </div>\r\n      </div>\r\n    </div> \r\n    <div class=\"cut-page animated fadeInUp\">\r\n      <p v-if=\"firstArticle\"></p>\r\n      <router-link v-if=\"!firstArticle\" :to=\"'/life_page?id='+prevCon.id\" class=\"prev\">\r\n        <svg style=\"\tstroke: #4299e1;  width:16px;height:50px;\" class=\"qfy-pagination-link-icon\" viewBox=\"0 0 23 48\"><g class=\"svg-icon\"> <polyline fill=\"none\" stroke-miterlimit=\"10\" points=\"21.5,1.3 2.6,23.4 21.5,45.7 \"></polyline></g></svg>\r\n        <p>\r\n          <span>上一篇</span>\r\n          <span>{{prevCon.title}}</span>\r\n        </p>\r\n      </router-link>\r\n      <p v-if=\"lastArticle\"></p>\r\n      <router-link v-if=\"!lastArticle\" :to=\"'/life_page?id='+nextCon.id\" class=\"next\">\r\n        <p>\r\n          <span>下一篇</span>\r\n          <span>{{nextCon.title}}</span>\r\n        </p>\r\n        <svg style=\"stroke: #4299e1;width:16px;height:50px;\" class=\"qfy-pagination-link-icon\" viewBox=\"0 0 23 48\"><g class=\"svg-icon\"> <polyline fill=\"none\" stroke-miterlimit=\"10\" points=\"1.5,45.7 20.4,23.5 1.5,1.3\"></polyline></g></svg>\r\n      </router-link>\r\n    </div>\r\n    <div class=\"page-comment\">\r\n      <comment v-if=\"isRouterAlive\"></comment>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 父组通过  :deta=\"data中的数据\"  的方式将数据传递给子组件\r\nimport page_swiper from \"@/components/basis/page_swiper\"\r\nimport m_loading from \"@/components/basis/loading\"\r\nimport comment from \"@/components/basis/comment\"\r\nexport default {\r\n   components: {\r\n     page_swiper,\r\n     m_loading,\r\n     comment\r\n  },\r\n  data() {\r\n    return {\r\n      isRouterAlive: true,\r\n      time : '文章内页',\r\n      article:{},//文章内容\r\n      img_con:[],\r\n      count:0,\r\n      hideLoading:true,\r\n      firstArticle:false,\r\n      lastArticle:false,\r\n      prevCon:{\r\n        id:'',\r\n        title:''\r\n      },\r\n      nextCon:{\r\n        id:'',\r\n        title:''\r\n      }      \r\n    };\r\n  },\r\n  props: {\r\n    //接收父组件传递过来的参数方法\r\n    deta: {\r\n      default: function() {\r\n        return '';\r\n      }\r\n    }\r\n  },\r\n  beforeCreate(){\r\n    //实例未创建，调用不到data数据\r\n  },\r\n  created() {\r\n    //实例创建完成后调用,此阶段完成了数据的观测,可调用data数据\r\n  },\r\n  mounted() {\r\n    //页面初始化方法\r\n    this.getArticle()\r\n  },\r\n  methods: {\r\n    //定义方法的地方\r\n    //添加cookie\r\n    setCookie:function(cname, cvalue, exdays){\r\n        var d = new Date();\r\n        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n        var expires = \"expires=\" + d.toUTCString();\r\n        document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\r\n    },\r\n    //获取点赞\r\n    getLike:function(){\r\n        let nlike = 'life_page' + this.$route.query.id\r\n        let ifLike = this.$cookie.get(nlike)\r\n        let id = this.$route.query.id;\r\n        let url = 'http://localhost:3306/article/getLike'\r\n        let that = this\r\n        this.axios.get(url, {\r\n        params: {\r\n            id : id\r\n        }\r\n        })\r\n        .then(function (result) {\r\n        if(result.data.length > 0){\r\n            if(ifLike == 0 | !ifLike){\r\n                result.data[0].alike+=1\r\n                that.setCookie(nlike,1,.5)\r\n            }else{\r\n                result.data[0].alike-=1\r\n                that.setCookie(nlike,0,.5)\r\n            }\r\n            that.article.alike = result.data[0].alike\r\n            that.addLike()\r\n        }else{\r\n            alert('获取数据失败')\r\n        }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    },\r\n    //添加点赞\r\n    addLike:function(){\r\n        let id = this.$route.query.id;\r\n        let alike = this.article.alike;\r\n        let postData = this.qs.stringify({\r\n          id : id,\r\n          alike : alike\r\n        })   \r\n        let that = this;\r\n        this.axios({\r\n            method: 'post',\r\n            url:'http://localhost:3306/article/addLike',\r\n            data:postData\r\n        }).then((res)=>{\r\n            if(res.data.code == 200){\r\n                console.log(res.data.msg)\r\n            }\r\n        })\r\n    },\r\n    //图片预加载的方法\r\n    preload: function() {\r\n      //初始化图片预加载\r\n      this.hideLoading = true;\r\n      this.count = 0;\r\n      for (let img of this.img_con) {\r\n        let image = new Image()\r\n        image.src = img\r\n        image.onload = () => {\r\n          this.count++\r\n        }\r\n      }\r\n    },\r\n    //获取文章内容\r\n    getArticle:function(){\r\n      let url = 'http://localhost:3306/article/item'\r\n      let id = this.$route.query.id\r\n      let that = this\r\n      this.axios.get(url, {\r\n          params: {\r\n            id : id\r\n          }\r\n        })\r\n        .then(function (result) {\r\n          that.article = result.data[0]\r\n          that.sepImg(that.article.img_url)\r\n          that.setFirst()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    //拆分文章图片  \r\n    sepImg:function(str){\r\n      let arr = str.split(',')\r\n      this.img_con = arr\r\n      this.reload ()\r\n      this.preload()\r\n    },\r\n    //查询当前文章是否是最后一篇或者第一遍\r\n    setFirst:function(){\r\n      let url = 'http://localhost:3306/article/first'\r\n      let bg_class = this.article.bg_class\r\n      let that = this\r\n      this.axios.get(url, {\r\n          params: {\r\n            bg_class : bg_class\r\n          }\r\n        })\r\n        .then(function (result) {\r\n          if(that.article.id == result.data[0].id){\r\n            that.firstArticle = true\r\n          }else{\r\n            that.firstArticle = false\r\n          }\r\n          that.setlast()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    setlast:function(){\r\n      let url = 'http://localhost:3306/article/last'\r\n      let bg_class = this.article.bg_class\r\n      let that = this\r\n      this.axios.get(url, {\r\n          params: {\r\n            bg_class : bg_class\r\n          }\r\n        })\r\n        .then(function (result) {\r\n          if(that.article.id == result.data[0].id){\r\n            that.lastArticle = true\r\n          }else{\r\n            that.lastArticle = false\r\n          }\r\n          that.getPrevNext()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    //获取文章上一篇和下一篇的id\r\n    getPrevNext:function(){\r\n        let url = 'http://localhost:3306/article/preNext'\r\n        let id = this.article.id\r\n        let bg_class = this.article.bg_class\r\n        let that = this\r\n        this.axios.get(url, {\r\n            params: {\r\n              id : id,\r\n              bg_class : bg_class\r\n            }\r\n          })\r\n          .then(function (result) {\r\n            if(that.firstArticle){\r\n              if(!that.lastArticle){\r\n                that.nextCon = result.data[0]\r\n              }\r\n            }else{\r\n              if(that.lastArticle){\r\n                that.prevCon = result.data[0]\r\n              }else{\r\n                //console.log(result.data)\r\n                that.prevCon = result.data[0]\r\n                that.nextCon = result.data[1]\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    },\r\n    reload () {\r\n      this.isRouterAlive = false\r\n      this.$nextTick(() => (this.isRouterAlive = true))\r\n    }\r\n  },\r\n  watch: {\r\n    //监听预加载\r\n    count: function(val) {\r\n      if(val  == this.img_con.length && val != 0){\r\n        let that = this\r\n        let timeId = setTimeout(function(){\r\n          that.hideLoading = false;\r\n        },500)\r\n      }\r\n    },\r\n    '$route' (to, from) { //监听路由是否变化\r\n\t\t  if(to.query.id != from.query.id){\r\n\t\t\t  this.id = to.query.id;\r\n\t\t\t  this.getArticle();//重新加载数据\r\n\t\t  }\r\n\t  }\r\n  }\r\n  \r\n \r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.page-img {\r\n  padding: 1rem;\r\n}\r\n.page-img p{\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  overflow: hidden;\r\n  border-radius: 5px;\r\n  transition: all .5s;\r\n  -webkit-box-shadow: rgba(200,200,200,0) 0px 5px 5px;\r\n  -moz-box-shadow: rgb(200,200,200,0) 0px 5px 5px;\r\n  box-shadow: rgba(200,200,200,0) 0px 5px 5px;\r\n}\r\n.page-img img{\r\n  display: block;\r\n  width: 100%;\r\n  transition: all .5s;\r\n}\r\n.page-img p:hover{\r\n  -webkit-box-shadow: rgba(200,200,200,.8) 0px 5px 5px;\r\n  -moz-box-shadow: rgb(200,200,200,.8) 0px 5px 5px;\r\n  box-shadow: rgba(200,200,200,.8) 0px 5px 5px;\r\n}\r\n.page-img p:hover img{\r\n  transform: scale(1.2);\r\n}\r\n\r\n.page-container{\r\n  margin-top: 20px;\r\n}\r\n\r\n.page-content{\r\n  background: rgba(250,250,250,.8);\r\n  max-width: 800px ;\r\n  margin: 0 auto ;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n}\r\n\r\n.p-title{\r\n  font-size: 1.5rem;\r\n  line-height: 2;\r\n  font-weight: bold;\r\n  color: #000;\r\n  text-align: center;\r\n}\r\n.p-time{\r\n  font-size: .8rem;\r\n  color: #666;\r\n  text-align: center;\r\n  line-height: 1.5;\r\n}\r\n.p-time span{\r\n  color: #f00;  \r\n}\r\n.p-text {\r\n  margin-top: 20px;\r\n  font-size: .9rem;\r\n  line-height: 1.5;\r\n  color: #333;\r\n  text-indent: 1.8rem;\r\n}\r\n.p-like{\r\n  margin-top: 20px;\r\n  text-align: right;\r\n  font-size: 1rem;\r\n  color: #999;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n}\r\n.p-like:hover{\r\n  color: #f00;\r\n}\r\n.cut-page,.page-comment{\r\n  margin: 20px auto 0;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  padding: 15px 10px;\r\n  border-radius: 5px;\r\n  background: rgba(250,250,250,.8);\r\n} \r\n.cut-page{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.cut-page a{\r\n  display: flex;\r\n  align-content: center;\r\n  color: #4299e1;\r\n  font-size: .9rem;\r\n  transition: all .5s;\r\n}\r\n.cut-page a:hover{\r\n  color: blue;\r\n}\r\n.cut-page a p{\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n}\r\n.cut-page a:first-child svg{\r\n  margin-right: 3px;\r\n}\r\n.cut-page a:last-child svg{\r\n  margin-left: 3px;\r\n}\r\n.prev p span:last-child,.next p span:last-child{\r\n  max-width: 80px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n@media (max-width: 750px) {\r\n  .page-container{\r\n    margin-top: 10px;\r\n  }\r\n  .cut-page,\r\n  .page-comment{\r\n    margin: 10px auto 0;\r\n  }\r\n  .cut-page a:hover{\r\n    color: #4299e1;\r\n  }\r\n}\r\n\r\n</style>\r\n\r\n<style>\r\n.p-text p{\r\n  margin-top: 10px;\r\n}\r\n.p-text span{\r\n  display: block;\r\n  font-size: 1rem;\r\n  color: #000;\r\n  font-weight: bold;\r\n  margin: 20px 0 0 -1.8rem;\r\n}\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/front/life_page.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.hideLoading)?_c('m_loading'):_vm._e(),_vm._v(\" \"),(_vm.img_con.length >= 2)?_c('div',{staticClass:\"page-swiper animated fadeInDown\"},[(_vm.isRouterAlive)?_c('page_swiper',{attrs:{\"deta\":_vm.img_con}}):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.img_con.length == 1)?_c('div',{staticClass:\"page-img img-2 animated fadeInDown\"},[_c('p',[_c('img',{attrs:{\"src\":_vm.img_con[0],\"alt\":\"\"}})])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"page-container animated fadeInUp\"},[_c('div',{staticClass:\"page-content\"},[_c('div',{staticClass:\"p-title\"},[_vm._v(_vm._s(_vm.article.title))]),_vm._v(\" \"),_c('div',{staticClass:\"p-time\"},[_vm._v(\"发布时间 \"),_c('span',[_vm._v(_vm._s(_vm._f(\"dateFormat\")(_vm.article.issueTime)))])]),_vm._v(\" \"),_c('div',{staticClass:\"p-text\",domProps:{\"innerHTML\":_vm._s(_vm.article.content)}}),_vm._v(\" \"),_c('div',{staticClass:\"p-like\"},[_c('span',{on:{\"click\":function($event){return _vm.getLike()}}},[_vm._v(\"❤（\"+_vm._s(_vm.article.alike)+\"）\")])])])]),_vm._v(\" \"),_c('div',{staticClass:\"cut-page animated fadeInUp\"},[(_vm.firstArticle)?_c('p'):_vm._e(),_vm._v(\" \"),(!_vm.firstArticle)?_c('router-link',{staticClass:\"prev\",attrs:{\"to\":'/life_page?id='+_vm.prevCon.id}},[_c('svg',{staticClass:\"qfy-pagination-link-icon\",staticStyle:{\"stroke\":\"#4299e1\",\"width\":\"16px\",\"height\":\"50px\"},attrs:{\"viewBox\":\"0 0 23 48\"}},[_c('g',{staticClass:\"svg-icon\"},[_c('polyline',{attrs:{\"fill\":\"none\",\"stroke-miterlimit\":\"10\",\"points\":\"21.5,1.3 2.6,23.4 21.5,45.7 \"}})])]),_vm._v(\" \"),_c('p',[_c('span',[_vm._v(\"上一篇\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.prevCon.title))])])]):_vm._e(),_vm._v(\" \"),(_vm.lastArticle)?_c('p'):_vm._e(),_vm._v(\" \"),(!_vm.lastArticle)?_c('router-link',{staticClass:\"next\",attrs:{\"to\":'/life_page?id='+_vm.nextCon.id}},[_c('p',[_c('span',[_vm._v(\"下一篇\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.nextCon.title))])]),_vm._v(\" \"),_c('svg',{staticClass:\"qfy-pagination-link-icon\",staticStyle:{\"stroke\":\"#4299e1\",\"width\":\"16px\",\"height\":\"50px\"},attrs:{\"viewBox\":\"0 0 23 48\"}},[_c('g',{staticClass:\"svg-icon\"},[_c('polyline',{attrs:{\"fill\":\"none\",\"stroke-miterlimit\":\"10\",\"points\":\"1.5,45.7 20.4,23.5 1.5,1.3\"}})])])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"page-comment\"},[(_vm.isRouterAlive)?_c('comment'):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4306327b\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/front/life_page.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4306327b\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./life_page.vue\")\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4306327b\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=1!./life_page.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./life_page.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./life_page.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4306327b\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./life_page.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4306327b\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/front/life_page.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}